<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.graduationlhj.mapper.UserMapper">

    <!--    Role getRoleByUserId(Long id);    -->
    <select id="getRoleByUserId" resultType="com.example.graduationlhj.entity.Role">
        SELECT r.`name`, r.roleKey
        FROM `user` as u,
             role as r
        where r.id = u.roleId
          and u.id = #{userId};
    </select>
    <!--    String getUserNameById(Long userId);    -->
    <select id="getUserNameById" resultType="java.lang.String">
        select userName
        from user
        where id = #{userId}
    </select>
    <!--    List<UserVo> getAllUser();    -->
    <select id="getAllUser" resultType="com.example.graduationlhj.params.Vo.UserVo">
        select
            temp.id,
            temp.userName,
            temp.nickName,
            temp.sex,
            temp.createBy ,
            temp.createTime ,
            `user`.userName as updateBy,
            temp.updateTime,
            temp.`status`,
            `user`.delFlag
        from `user`,
             (SELECT
                  u.id,
                  u.roleId,
                  u.userName,
                  u.nickName,
                  u.sex,
                  cUser.userName as createBy ,
                  u.createTime ,
                  u.updateBy,
                  u.updateTime,
                  u.`status`,
                  u.delFlag
              FROM `user` as u
                       INNER JOIN `user` as cUser on  u.createBy = cUser.id) as temp
        where temp.updateBy = `user`.id and temp.roleId = 2 and temp.delFlag = 0
    </select>

    <!--    int updateAvatarByUserId(String imageUrl,Long id);   -->
    <update id="updateAvatarByUserId">
        update user
        set avatar = #{imageUrl}
        where id = #{id}
    </update>
</mapper>
